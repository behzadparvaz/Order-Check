{
    "OKEServiceConfigurations": {
        "ServiceId": "Order01",
        "JsonSerializerTypeName": "NewtonSoftSerializer",
        "ExcelSerializerTypeName": "EPPlusExcelSerializer",
        "UserInfoServiceTypeName": "FakeUserInfoService",
        "UseFakeUserService": true,
        "RegisterRepositories": true,
        "RegisterHandlers": true,
        "RegisterAutomapperProfiles": true,
        "AssmblyNameForLoad": "Order,OKEService",
        "Translator": {
            "TranslatorTypeName": "ParrotTranslator",
            "ParrotTranslator": {
                "ConnectionString": "Server=TPD-001-G020;Database=Parrot;MultipleActiveResultSets=true;Integrated Security=True;TrustServerCertificate=True; connect timeout=3000",
                "autoCreateSqlTable": true,
                "SelectCommand": "Select * from ParrotTranslations",
                "InsertCommand": "INSERT INTO [dbo].[ParrotTranslations]([Key],[Value],[Culture]) VALUES (@Key,@Value,@Culture) select SCOPE_IDENTITY()"
            }
        },
        "MessageBus": {
            "Enabled": false,
            "MessageBusTypeName": "RabbitMqMessageBus",
            "MessageConsumerTypeName": "IdempotentMessageConsumer",
            "RabbitMq": {
                "UserName": "guest",
                "Password": "guest",
                "Host": "localhost",
                "Port": "15672",
                "VirualHost": "/",
                "Protocol": "amqp",
                "ExchangeName": "SyncDataProductServiceExchange",
                "ExchangeDurable": false,
                "ExchangeAutoDeleted": false
            }
        },
        "MessageConsumer": {
            "MessageInboxStoreTypeName": "SqlMessageInboxItemRepository",
            "SqlMessageInboxStore": {
                "ConnectionString": ""
            },
            "Commands": [
                {
                    "CommandName": "TestCommand",
                    "MapToClass": "OKEService.MiniBlog.Core.ApplicationServices.People.Commands.TestExternal.TestCommand, OKEService.MiniBlog.Core.ApplicationServices"
                }
            ],
            "Events": [
                {
                    "FromServiceId": "TapsiDOC01",
                    "EventData": [
                        {
                            "EventName": "PersonCreated",
                            "MapToClass": "OKEService.MiniBlog.Core.Domain.Writers.Events.PersonCreated, OKEService.MiniBlog.Core.Domain"
                        },
                        {
                            "EventName": "PersonUpdated",
                            "MapToClass": "OKEService.MiniBlog.Core.Domain.Writers.Events.PersonUpdated, OKEService.MiniBlog.Core.Domain"
                        }
                    ]
                }
            ]
        },
        "PoolingPublisher": {
            "Enabled": false,
            "OutBoxRepositoryTypeName": "SqlOutBoxEventItemRepository",
            "SqlOutBoxEvent": {
                "ConnectionString": "Data Source=10.192.2.99;Initial Catalog=PickStore;Integrated Security=true;",
                "SelectCommand": "Select top {0} * from OutBoxEventItems where IsProcessed = 0",
                "UpdateCommand": "Update OutBoxEventItems set IsProcessed = 1 where OutBoxEventItemId in ({0})"
            },
            "SendOutBoxInterval": 5,
            "SendOutBoxCount": 100
        },
        "EntityChangeInterception": {
            "Enabled": true,
            "EntityChageInterceptorRepositoryTypeName": "FakeEntityChageInterceptorItemRepository"
        },
        "ApplicationEvents": {
            "TransactionalEventsEnabled": true,
            "RaiseInmemoryEvents": false
        },
        "Swagger": {
            "Enabled": true,
            "SwaggerDoc": {
                "Version": "v1",
                "Title": "Order",
                "Name": "v1",
                "URL": "/swagger/v1/swagger.json"
            }
        },
        "Caching": {
            "Enable": false,
            "EnableQueryAutomaticCache": true,
            "Provider": "MemoryCache",
            "DistributedSqlServerCache": {
                "ConnectionString": "Server=TPD-001-G020;Database=CacheDB;MultipleActiveResultSets=true;Integrated Security=True;TrustServerCertificate=True; connect timeout=3000",
                "SchemaName": "dbo",
                "TableName": "CacheTable"
            },
            "StackExchangeRedisCache": {
                "Configuration": "localhost",
                "SampleInstance": "SampleInstance"
            },
            "NCacheDistributedCache": {
                "CacheName": "demoClusteredCache",
                "EnableLogs": true,
                "ExceptionsEnabled": true
            },
            "Policies": [
                {
                    "Name": "Default",
                    "Order": 1,
                    "AbsoluteExpiration": null,
                    "SlidingExpiration": 60,
                    "Includes": [ "*" ],
                    "Excludes": [ "-" ]
                }
            ]
        }
    }
}